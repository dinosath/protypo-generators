{# generate entities #}
{% import "macros.tpl" as macros %}

{% for entity in entities -%}
{% if not entity.enum %}{% continue %}{% endif %}

{% set file_name = entity.title | snake_case -%}
{% set module_name = file_name | pascal_case -%}
to: {{ outputFolder }}/src/models/enums/{{ file_name }}.rs
message: "Enum `{{module_name}}` was added successfully."
injections:
- into: {{ outputFolder }}/src/models/enums/mod.rs
  append: true
  content: "pub mod {{ file_name }};"
===
use sea_orm::entity::prelude::*;
use serde::{Serialize, Deserialize};

#[derive(PartialEq, Clone, Debug, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "String(StringLen::None)", enum_name = "{{ entity.title | snake_case }}")]
pub enum {{ entity.title | pascal_case }}{
        {% for value in entity.enum -%}
        #[sea_orm(string_value = "{{ value | snake_case }}")]
        {{ value }}{%- if not loop.last -%},{% endif -%}
        {% endfor %}
}
---
{% endfor -%}