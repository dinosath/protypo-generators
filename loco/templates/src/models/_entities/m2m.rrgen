{# generate entities #}
{% import "macros.tpl" as macros %}
{% set_global created_relations = [] %}
{% for entity in entities -%}
    {% if entity.properties %}
        {% for name,property in entity.properties -%}
            {% if property.type and property.type=="array" and property.items and property['items']['$ref'] and property['items']['x-relationship'] and property['items']['x-relationship']=="many-to-many" %}
                {% set left = entity.title %} 
                {% set right = macros::get_relation_from_string(string=property.items['$ref']) %}
                {% set relation = left ~ "_" ~ right  %}
                {% if relation not in created_relations and relation | reverse not in created_relations %}
                    {% set_global created_relations = created_relations | concat(with=relation) %}
                    {% set left_snake = left | plural | snake_case %}
                    {% set right_snake = right | plural | snake_case %}

{% set file_name = left_snake ~ "_" ~ right_snake -%}
to: {{ outputFolder }}/src/models/_entities/{{ file_name }}.rs
message: "Entity `{{file_name}}` was added successfully."
===

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "crate::models::_entities::{{ left_snake }}::Entity",
        from = "Column::{{ left | pascal_case }}Id",
        to = "crate::models::_entities::{{ left_snake }}::Column::Id"
    )]
    {{ left | pascal_case }},
    #[sea_orm(
        belongs_to = "crate::models::_entities::{{ right_snake }}::Entity",
        from = "Column::{{ right | pascal_case }}Id",
        to = "crate::models::_entities::{{ right_snake }}::Column::Id"
    )]
    {{ right | pascal_case }},
}


    

---
                {% endif %}
            {% endif %}
        {% endfor %}
    {% endif %}
{% endfor -%}